{"version":3,"sources":["utils/numberWithCommas.js","containers/GlobalStats/Card/Card.js","api/api.js","containers/GlobalStats/GlobalStats.js","containers/DataTable/DataTable.js","containers/BarGraph/BarGraph.js","containers/Maps/USAMap.js","containers/Maps/Maps.js","containers/ScatterGraph/ScatterGraph.js","utils/i18n.js","locales/locales.js","components/Header/Header.js","components/Footer/Footer.js","components/Layout/Layout.js","containers/LineGraph/LineGraph.js","containers/ContinentsStats/PieChart/PieChart.js","containers/ContinentsStats/ContinentsStats.js","components/Overview/Overview.js","App.js","serviceWorker.js","index.js"],"names":["numberWithCommas","x","toString","replace","Card","props","className","Number","value","title","BASE_URL","GLOBAL_URL","COUNTRY_URL","HISTORY_URL","GLOBAL_HISTORY_URL","STATE_URL","DAILY_URL","GlobalStats","useState","globalStats","setGlobalStats","t","useTranslation","useEffect","a","fetch","result","json","updated","console","log","fetchGlobalSummary","cases","deaths","recovered","DataTable","mode","localStorage","getItem","style","backgroundColor","color","countriesData","setCountriesData","copyCountriesData","setCopyCountriesData","numberOfViewRows","setNumberOfViewRows","currentPage","setCurrentPage","fetchCountriesData","onSortUp","e","key","sort","b","onSortDown","prev","totalPages","Math","ceil","length","next","onChange","target","handleSelect","selected","type","placeholder","filter","country","toLowerCase","startsWith","onSearch","onClick","currentCountries","slice","startIndex","map","index","scope","src","alt","width","height","displayData","aria-label","prevPage","pageNumbers","i","push","indexOfFirstPage","indexOfLastPage","max","splice","num","id","displayPagination","BarGraph","history","setHistory","currentCountry","setCurrentCountry","currentProvince","setCurrentProvince","data","fetchHistory","convertData","obj","list","Object","keys","forEach","y","countryData","find","labels","datasets","label","options","legend","fontColor","tooltips","callbacks","tooltipItem","datasetIndex","yLabel","scales","xAxes","ticks","yAxes","responsive","maintainAspectRatio","split","province","USAMap","setData","content","setContent","state","item","changed","fetchStates","colorScale","scaleLinear","domain","min","range","data-tip","projection","geography","geographies","geo","cur","s","rsmKey","fill","stroke","onMouseEnter","handleHover","properties","onMouseLeave","handleMouseLeave","default","outline","hover","pressed","Maps","ts","Date","for","active","todayCases","todayDeaths","toLocaleString","ScatterGraph","dailyData","setDailyData","intitialDailyData","setInitialDailyData","fetchDailyData","day","getDate","join","getTime","extractData","callback","toLocaleDateString","month","year","display","handleChanged","defaultValue","resources","en","translation","vn","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","locales","name","Header","setMode","setItem","document","querySelector","language","setLanguage","changeLanguage","handleLanguageChanged","prevState","Footer","href","Layout","children","LineGraph","globalHistory","setGlobalHistory","fetchGlobalHistory","elements","line","usePointStyle","PieChart","scale","gridLines","angleLines","colors","ContinentsStats","gridColor","continents","setContinents","fetchContinents","getData","continent","continentLabels","Overview","App","changeUpdate","date","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f14c31f8.chunk.js","sourcesContent":["export function numberWithCommas(x) {\r\n    if (!x) return \"0\"\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React from 'react'\r\nimport { numberWithCommas } from '../../../utils/numberWithCommas';\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card'>\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-text\">{numberWithCommas(Number(props.value))}</h3>\r\n                <p className=\"card-text\">{props.title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","export const BASE_URL = \"https://corona.lmao.ninja/v2\" \r\nexport const GLOBAL_URL = BASE_URL + \"/all\";\r\nexport const COUNTRY_URL = BASE_URL + \"/countries\"; \r\nexport const HISTORY_URL = BASE_URL + \"/historical?lastdays=all\";\r\nexport const GLOBAL_HISTORY_URL = BASE_URL + \"/historical/all?lastdays=all\";\r\nexport const CONTINENT_URL = BASE_URL + \"/continents\";\r\nexport const STATE_URL = BASE_URL + \"/states\";\r\nexport const DAILY_URL = \"https://covid19.mathdro.id/api/daily\"","import React, { useState, useEffect } from 'react'\r\nimport Card from './Card/Card'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { GLOBAL_URL } from '../../api/api'\r\nconst GlobalStats = props => {\r\n    const [globalStats, setGlobalStats] = useState({}) \r\n    const { t } = useTranslation();\r\n    useEffect(()=>{\r\n        async function fetchGlobalSummary() {\r\n            try {\r\n                const result = await fetch(GLOBAL_URL)\r\n                const globalStats = await result.json();\r\n                setGlobalStats({...globalStats});\r\n                props.updated(globalStats[\"updated\"])\r\n            }\r\n            catch (error){\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchGlobalSummary();\r\n    }, [])\r\n    return (\r\n        <div className=\"card-deck\">\r\n            <div className=\"col col-sm-6 col-lg-4\">\r\n                 <Card title={t('confirmed')} value={globalStats.cases}></Card>\r\n            </div>\r\n            <div className=\"col col-sm-6 col-lg-4\">\r\n                <Card title={t('deaths')} value={globalStats.deaths}></Card>\r\n            </div>\r\n            <div className=\"col col-sm-6 col-lg-4 mx-sm-auto mt-sm-3 mt-lg-0\">\r\n                <Card title={t('recovered')} value={globalStats.recovered}></Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalStats;","import React, { useState, useEffect } from 'react'\r\nimport { COUNTRY_URL } from '../../api/api';\r\nimport { useTranslation } from 'react-i18next'\r\nimport './DataTable.css'\r\nimport { numberWithCommas } from '../../utils/numberWithCommas';\r\nconst DataTable = () => {\r\n    const mode = localStorage.getItem('mode');\r\n    const style = {\r\n        backgroundColor : mode === \"light-mode\" ? \"#FFF\" : \"#243447\",\r\n        color : mode === \"light-mode\" ? \"#000\" : \"#FFF\",\r\n    }\r\n    const { t } = useTranslation();\r\n    const [ countriesData, setCountriesData ] = useState([]);\r\n    const [ copyCountriesData, setCopyCountriesData ] = useState([]); \r\n    const [ numberOfViewRows, setNumberOfViewRows ] = useState(5);\r\n    const [ currentPage, setCurrentPage ] = useState(1);\r\n    useEffect(()=>{\r\n        async function fetchCountriesData() {\r\n            try {\r\n                const result = await fetch(COUNTRY_URL);\r\n                const countriesData = await result.json();\r\n                setCountriesData([...countriesData]);\r\n                setCopyCountriesData([...countriesData]);\r\n            }\r\n            catch (error){\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchCountriesData();\r\n    },[])\r\n\r\n    const displayData = () => {\r\n        if (!copyCountriesData.length) \r\n            return <tr><td>{t(\"noResults\")}</td></tr>\r\n        const currentCountries = copyCountriesData.slice((currentPage-1) * numberOfViewRows, currentPage*numberOfViewRows);\r\n        const startIndex = (currentPage-1) * numberOfViewRows + 1;\r\n        return currentCountries.map((country, index)=>{\r\n            return (\r\n                <tbody key={country[\"country\"]}>\r\n                    <tr>\r\n                    <th scope=\"row\">{startIndex + index}</th>\r\n                    <td><img src={country[\"countryInfo\"][\"flag\"]} alt=\"\" width=\"30px\" height=\"20px\" className=\"mr-2 d-none d-sm-inline\"></img>{country[\"country\"]}</td>\r\n                    <td>{numberWithCommas(country[\"cases\"])}</td>\r\n                    <td>{numberWithCommas(country[\"deaths\"])}</td>\r\n                    <td>{numberWithCommas(country[\"recovered\"])}</td>\r\n                    <td>{numberWithCommas(country[\"todayCases\"])}</td>\r\n                    <td>{numberWithCommas(country[\"todayDeaths\"])}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        })\r\n    }\r\n    const displayPagination = () => {\r\n        let pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(copyCountriesData.length / numberOfViewRows); i++)\r\n            pageNumbers.push(i);\r\n        let indexOfFirstPage = currentPage;\r\n        let indexOfLastPage = pageNumbers.length;\r\n        if (indexOfLastPage - indexOfFirstPage < 3) indexOfFirstPage = Math.max(1, indexOfLastPage-3);\r\n        pageNumbers = pageNumbers.slice(indexOfFirstPage-1, indexOfLastPage);\r\n        if (pageNumbers.length > 6) pageNumbers.splice(4,pageNumbers.length-6,\"...\");\r\n        if (indexOfFirstPage > 10) pageNumbers.splice(0, 0, 1,\"...\");\r\n        return pageNumbers.map((num, index)=>{ \r\n            return (\r\n                <li className={\"page-item\" + (num === \"...\" ? \" disabled\" : \"\")}  key={index}>\r\n                    <div className={\"page-link \" + (mode === \"light-mode\" ? \"light-pagination\" : \"dark-pagination\") + (currentPage === num ? \" active\" : \"\")}  \r\n                       id={num} \r\n                       onClick={e => {setCurrentPage(Number(e.target.id));}}>\r\n                        {num}\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setNumberOfViewRows(Number(e.target.value)); \r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const onSearch = (e) => {\r\n        const copyCountriesData = countriesData.filter(country => {\r\n            return country[\"country\"].toLowerCase().startsWith(e.target.value.toLowerCase());\r\n        })\r\n        setCopyCountriesData([...copyCountriesData]);\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const onSortUp = (e, key) => {\r\n        let copyCountriesData = [...countriesData];\r\n        copyCountriesData.sort((a,b)=> a[key] > b[key] ? 1 : -1 );\r\n        setCopyCountriesData([...copyCountriesData]);\r\n    }\r\n    const onSortDown = (e, key) => {\r\n        let copyCountriesData = [...countriesData];\r\n        copyCountriesData.sort((a,b)=> a[key] < b[key] ? 1 : -1 );\r\n        setCopyCountriesData([...copyCountriesData]);\r\n    }\r\n\r\n    const prevClick = () => {\r\n        setCurrentPage(prevPage => prevPage-1);\r\n    }\r\n    const nextClick = () => {\r\n        setCurrentPage(prevPage => prevPage+1);\r\n    }\r\n    const prev = (currentPage !== 1);\r\n    const totalPages = Math.ceil(copyCountriesData.length / numberOfViewRows)\r\n    const next = (currentPage !== totalPages);\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <div className=\"d-flex  flex-column flex-sm-row justify-content-between mb-3\">\r\n                <div className=\"d-inline-flex\">\r\n                    <span className=\"mt-1\">{t(\"show\")}</span>\r\n                    <select className=\"form-control-sm mx-2 view-rows\" onChange={e => handleSelect(e)} style={style}>\r\n                        <option value=\"5\" selected>5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                    <span className=\"mt-1\">{t(\"records\")}</span>\r\n                </div>\r\n                <div className=\"input-group search-bar mt-2 mt-sm-0\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder={t(\"searchCountry\")} onChange={e => onSearch(e)} style={style}/>\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\"><i className=\"fa fa-search\" onChange></i></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className= {\"table table-borderless \" + (mode ? \"border\" : \"\")} style={style}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th >#</th>\r\n                        <th>{t(\"country\")} \r\n                            <div className=\"d-inline-block d-inline\">\r\n                                <span className=\"ml-1 fa fa-arrow-up\" onClick={e => onSortUp(e, \"country\")}></span>\r\n                                <span className=\"fa fa-arrow-down\" onClick={e => onSortDown(e, \"country\")}></span>\r\n                            </div>\r\n                        </th>\r\n                        <th>{t(\"confirmed\")}\r\n                        <div className=\"d-inline-block d-inline\">\r\n                            <span className=\"ml-1 fa fa-arrow-up\" onClick={e => onSortUp(e, \"cases\")}></span>\r\n                            <span className=\"fa fa-arrow-down\" onClick={e => onSortDown(e, \"cases\")}></span>\r\n                        </div>\r\n                        </th>\r\n                        <th>{t(\"deaths\")}\r\n                            <div className=\"d-inline-block d-inline\">\r\n                                <span className=\"ml-1 fa fa-arrow-up\" onClick={e => onSortUp(e, \"deaths\")}></span>\r\n                                <span className=\"fa fa-arrow-down\" onClick={e => onSortDown(e, \"deaths\")}></span> \r\n                            </div>\r\n                        </th>\r\n                        <th>{t(\"recovered\")}\r\n                            <div className=\"d-inline-block d-inline\">\r\n                                <span className=\"ml-1 fa fa-arrow-up\" onClick={e => onSortUp(e, \"recovered\")}></span>\r\n                                <span className=\"fa fa-arrow-down\" onClick={e => onSortDown(e, \"recovered\")}></span>\r\n                            </div>\r\n                        </th>\r\n                        <th>{t(\"todayCases\")} \r\n                            <div className=\"d-inline-block d-inline\">\r\n                                <span className=\"ml-1 fa fa-arrow-up \" onClick={e => onSortUp(e, \"todayCases\")}></span>\r\n                                <span className=\"fa fa-arrow-down\" onClick={e => onSortDown(e, \"todayCases\")}></span>\r\n                            </div>\r\n                        </th>\r\n                        <th>{t(\"todayDeaths\")}\r\n                            <div className=\"d-inline-block d-inline\">\r\n                                <span className=\"ml-1 fa fa-arrow-up\" onClick={e => onSortUp(e, \"todayDeaths\")}></span>\r\n                                <span className=\"fa fa-arrow-down\" onClick={e => onSortDown(e, \"todayDeaths\")}></span>\r\n                            </div>\r\n                        </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {displayData()}\r\n                </table>\r\n            </div>\r\n\r\n            {copyCountriesData.length ? \r\n                <nav aria-label=\"Page navigation\">\r\n                    <ul className=\"mt-3 mt-sm-0 pagination pagination-sm justify-content-center justify-content-sm-end flex-wrap\">\r\n                        <li className={\"page-item\" + (prev ? \"\" : \" disabled\")}>\r\n                            <div className={\"page-link \" + (mode === \"light-mode\" ? \"light-pagination\" : \"dark-pagination\")}  \r\n                                onClick={()=>prevClick()}>\r\n                                    {t(\"prev\")}\r\n                            </div>\r\n                        </li>\r\n                    {displayPagination()}\r\n                    <li className={\"page-item\" + (next ? \"\" : \" disabled\")}>\r\n                            <div className={\"page-link \" + (mode === \"light-mode\" ? \"light-pagination\" : \"dark-pagination\")} \r\n                                onClick={()=>nextClick()}>\r\n                                    {t(\"next\")}\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </nav> : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataTable;","import React, { useState, useEffect } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { HISTORY_URL } from '../../api/api';\r\nimport { numberWithCommas } from '../../utils/numberWithCommas';\r\nconst BarGraph = () => {\r\n    const mode = localStorage.getItem('mode');\r\n    const DEFAULT_COUNTRY = \"USA\";\r\n    const style = {\r\n        backgroundColor : mode === \"light-mode\" ? \"#FFF\" : \"#243447\",\r\n        color : mode === \"light-mode\" ? \"#000\" : \"#FFF\",\r\n        width: \"50vh\"\r\n    }\r\n    const [ history, setHistory ] = useState([]);\r\n    const [ currentCountry, setCurrentCountry ] = useState(DEFAULT_COUNTRY);\r\n    const [ currentProvince, setCurrentProvince] = useState(null);\r\n    const { t } = useTranslation();\r\n    useEffect(()=>{\r\n        async function fetchHistory() {\r\n            try {\r\n                const result = await fetch(HISTORY_URL);\r\n                const data = await result.json();\r\n                setHistory([...data]);\r\n            }\r\n            catch (error){\r\n                console.log(error);\r\n            }\r\n        } \r\n        fetchHistory();\r\n    },[])\r\n    const convertData = obj => {\r\n        let list = [];\r\n        Object.keys(obj).forEach( key => {\r\n            list.push({ x: key, y:  obj[key]});\r\n        })\r\n        return list;\r\n    }\r\n    const displayCountryOption = () => {\r\n        let countries = history.map(country => {\r\n            return country[\"country\"] + (country[\"province\"] ? \", \" + country[\"province\"] : \"\");\r\n        });\r\n        return countries.map(country => { \r\n          return ( \r\n            country === DEFAULT_COUNTRY ? <option value={country} key={country} selected>{country}</option> : \r\n            <option value={country} key={country}>{country}</option>\r\n          )\r\n        })\r\n    }\r\n    const handleSelect = e => {\r\n        let [country, province] = e.target.value.split(\", \");\r\n        if (!province) province = null;\r\n        setCurrentCountry(country);\r\n        setCurrentProvince(province);\r\n    }\r\n    const countryData = history.find(country => country[\"country\"] === currentCountry && country[\"province\"] === currentProvince);\r\n    let data = {}\r\n    if (countryData) {\r\n        data = {\r\n        labels: Object.keys(countryData[\"timeline\"][\"cases\"]),\r\n        datasets: [ \r\n            {\r\n                label: t(\"confirmed\"), \r\n                data: convertData(countryData[\"timeline\"][\"cases\"]),\r\n                backgroundColor: \"#00BFFF\",\r\n            },\r\n            {\r\n                label: t(\"deaths\"), \r\n                data: convertData(countryData[\"timeline\"][\"deaths\"]),\r\n                backgroundColor: \"#FF6347\"\r\n            },\r\n            {\r\n                label: t(\"recovered\"), \r\n                data: convertData(countryData[\"timeline\"][\"recovered\"]),\r\n                backgroundColor: \"#00FF00\"\r\n            }\r\n        ]\r\n    };\r\n    }\r\n    const options = {\r\n        legend: {\r\n            labels : {\r\n                fontColor : style.color\r\n            }\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n               label: function(tooltipItem, data) {\r\n                   let label = data.datasets[tooltipItem.datasetIndex][\"label\"];\r\n                  return label + \": \" + numberWithCommas(tooltipItem.yLabel);\r\n               }\r\n            }\r\n        },\r\n        scales : {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: style.color,\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: style.color,\r\n                }\r\n            }]\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false\r\n    }\r\n    return(\r\n        <div className=\"mt-5\">\r\n            <div className=\"d-flex flex-column flex-sm-row justify-content-between\">\r\n                <h5>{t(\"timeline\")}</h5>\r\n                <select className=\"form-control-sm mb-3\" onChange={e => handleSelect(e)} style={style}>\r\n                     {displayCountryOption()}\r\n                </select>\r\n            </div>\r\n            <div  className={mode ? \"light-mode card\" : \"dark-mode card\"} style={{width : \"100%\"}}>\r\n                <Bar data={data} height={400} options={options}></Bar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarGraph;","import React, { useState, useEffect } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { STATE_URL } from \"../../api/api\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\n\r\nconst USAMap = props => {\r\n  const [ data, setData ] = useState([]);\r\n  const [ content, setContent ] = useState(\"\");\r\n  const { t } = useTranslation();\r\n  const DEFAULT_STATE = \"New York\";\r\n  useEffect(() => {\r\n    async function fetchStates() {\r\n        const result = await fetch(STATE_URL);\r\n        const data = await result.json();\r\n        const state = data.find(item => item[\"state\"] == DEFAULT_STATE);\r\n        setData([...data]);\r\n        props.changed({...state})\r\n    }\r\n    fetchStates();\r\n  }, []);\r\n  const handleHover = (e, geo, cur) => {\r\n    const state = data.find(item => item[\"state\"] === geo[\"name\"]);\r\n    props.changed({...state});\r\n    return cur? setContent(`${cur[\"state\"]}: ${cur[props.target]} ${t(props.content)}`): \"\";\r\n  }\r\n  const handleMouseLeave = () => {\r\n    const state = data.find(item => item[\"state\"] === DEFAULT_STATE);\r\n    props.changed({...state});\r\n    setContent(\"\");\r\n  }\r\n  const cases = data.map(item=> item[props.target]);\r\n  const colorScale = scaleLinear()\r\n  .domain([Math.min(...cases), Math.max(...cases)])\r\n  .range([\"#ffedea\", \"#ff5233\"  ]);\r\n  return (\r\n        <div>\r\n        <ComposableMap  data-tip=\"\" projection=\"geoAlbersUsa\">\r\n            <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n                geographies.map(geo => {\r\n                const cur = data.find(s => s[\"state\"] == geo[\"properties\"][\"name\"]);\r\n                return (\r\n                    <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onClick = {() => ()=> geo[\"properties\"][\"name\"]}\r\n                    fill={ cur?colorScale(cur.cases) : \"#EEE\"}\r\n                    stroke = \"#000\"\r\n                    onMouseEnter = {(e) => handleHover(e, geo.properties, cur)}\r\n                    onMouseLeave = {() => handleMouseLeave()}\r\n                    style={{\r\n                      default: {\r\n                        outline: \"none\"\r\n                      },\r\n                      hover: {\r\n                        outline: \"none\"\r\n                      },\r\n                      pressed: {\r\n                        outline: \"none\"\r\n                      }\r\n                    }}\r\n                    />\r\n                );\r\n                })\r\n            }\r\n            </Geographies>\r\n        </ComposableMap>\r\n        <ReactTooltip >{content}</ReactTooltip>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default USAMap;\r\n","import React, { useState } from 'react'\r\nimport USAMap from './USAMap'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { numberWithCommas } from '../../utils/numberWithCommas';\r\nconst Maps = () => {\r\n    const mode = localStorage.getItem('mode');\r\n    const style = {\r\n        color : mode === \"light-mode\" ? \"#FFB347\" : \"#C51F5D\",\r\n        fontColor :  mode === \"light-mode\" ? \"text-dark\" : \"text-light\"\r\n\r\n    }\r\n    const { t } = useTranslation();\r\n    const [ data, setData ] = useState({\"updated\" : 0, \"state\" : \"\", \"confirmed\" : 0, \"deaths\" : 0, \"active\" : 0, \"todayCases\" : 0, \"todayDeaths\" : 0});\r\n    const ts = new Date(data.updated);\r\n    return (\r\n        <div className=\"mt-5\">\r\n             <h5 className=\"mb-4\">{t('USStatesCases')}</h5>\r\n            <div>\r\n                <div className=\"d-flex flex-column flex-md-row justify-content-between\">\r\n                    <div className=\"col-md-7\" style={{width:\"100%\"}}>\r\n                      <USAMap target=\"cases\" content=\"confirmedCases\" changed = {setData}></USAMap>\r\n                    </div>\r\n                    <div className=\"col-md-5\" style={{width : \"100%\"}}>\r\n                        <h5 className=\"font-weight-bold\" style={style}>{data.state}</h5>\r\n                        <div className=\"form-group form-group-md row\">\r\n                            <label for=\"confirmed\" className=\"col-5 col-form-label\">{t(\"confirmed\") + \": \"}</label>\r\n                            <div className=\"col-7\">\r\n                            <input type=\"text\" className={\"form-control-plaintext \" + style.fontColor } id=\"confirmed\" value={numberWithCommas(data.cases)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label for=\"deaths\" className=\"col-5 col-form-label\">{t(\"deaths\") + \": \"}</label>\r\n                            <div className=\"col-7\">\r\n                            <input type=\"text\"className={\"form-control-plaintext \" + style.fontColor } id=\"deaths\" value={numberWithCommas(data.deaths)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label for=\"active\" className=\"col-5 col-form-label\">{t(\"active\") + \": \"}</label>\r\n                            <div className=\"col-7\">\r\n                            <input type=\"text\" className={\"form-control-plaintext \" + style.fontColor } id=\"active\" value={numberWithCommas(data.active)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label for=\"todayCases\" className=\"col-5 col-form-label\">{t(\"todayCases\") + \": \"}</label>\r\n                            <div className=\"col-7\">\r\n                            <input type=\"text\" className={\"form-control-plaintext \" + style.fontColor } id=\"todayCases\" value={numberWithCommas(data.todayCases)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label for=\"todayDeaths\" className=\"col-5 col-form-label\">{t(\"todayDeaths\") + \": \"}</label>\r\n                            <div className=\"col-7\">\r\n                            <input type=\"text\" className={\"form-control-plaintext \" + style.fontColor }id=\"todayDeaths\" value={numberWithCommas(data.todayDeaths)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label for=\"updated\" className=\"col-5 col-form-label\">{t(\"updated\") + \": \"}</label>\r\n                            <div className=\"col-7\">\r\n                            <input type=\"text\" className={\"form-control-plaintext \" + style.fontColor } id=\"updated\" value={ts.toLocaleString()}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Maps;","import React, { useState, useEffect } from 'react'\r\nimport { Scatter } from 'react-chartjs-2'\r\nimport { DAILY_URL } from '../../api/api';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { numberWithCommas } from '../../utils/numberWithCommas';\r\nconst ScatterGraph = () => {\r\n    const mode = localStorage.getItem('mode');\r\n    const style = {\r\n        fontColor : mode === \"light-mode\" ? \"#000\" : \"#FFF\"\r\n    }\r\n    const { t } = useTranslation();\r\n    const [ dailyData, setDailyData ] = useState([]);\r\n    const [ intitialDailyData, setInitialDailyData ] = useState([]);\r\n    useEffect(()=>{\r\n        async function fetchDailyData() {\r\n            const result = await fetch(DAILY_URL);\r\n            const data = await result.json();\r\n            setInitialDailyData([...data]);\r\n            setDailyData([...data]);\r\n        }\r\n        fetchDailyData();\r\n    },[])\r\n    const extractData = key => {\r\n        let list = [];\r\n        dailyData.forEach(day => {\r\n            list.push({x: new Date(day[\"reportDate\"].split(\"-\").join(\"-\")).getTime(), y: day[key]});\r\n        })\r\n        return list;\r\n    }\r\n    const getDate = () => {\r\n        let list = [];\r\n        dailyData.forEach(day => {\r\n            list.push(day[\"reportDate\"]);\r\n        })\r\n        return list;\r\n    }\r\n    const handleChanged = e => {\r\n        let data = [...intitialDailyData];\r\n        let index = Number(e.target.value);\r\n        data.splice(index, intitialDailyData.length - index);\r\n        setDailyData([...data]);\r\n    }\r\n    let data = {}\r\n    if (dailyData.length) {\r\n        data = {\r\n            labels: getDate(),\r\n            datasets : [{\r\n                label : \"confirmed\",\r\n                data:extractData(\"deltaConfirmed\"),\r\n                backgroundColor :  mode === \"light-mode\" ? \"#FFB347\" : \"#C51F5D\",\r\n            }]\r\n        }\r\n    }\r\n    const options = {\r\n        scales: {\r\n            xAxes: [{\r\n                    ticks: \r\n                        {\r\n                            fontColor: style.fontColor,\r\n                            callback: (value) => {\r\n                            return new Date(value).toLocaleDateString('en-US', {month: \"short\",year: \"numeric\"});\r\n                        }\r\n                    }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: style.fontColor,\r\n                }\r\n            }]\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n               label: function(tooltipItem, data) {\r\n                  let label = data.labels[tooltipItem.index];\r\n                  return label + \": \" + numberWithCommas(tooltipItem.yLabel) + \" \" + t(\"cases\");\r\n               }\r\n            }\r\n        },\r\n        legend: {\r\n            display: false\r\n        },\r\n        responsive : true,\r\n        maintainAspectRatio: false,\r\n     }\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <div className=\"d-flex  flex-column flex-sm-row justify-content-between mb-3\">\r\n                <h5>{t(\"globalDailyCases\")}</h5>\r\n                <div>\r\n                    <input type=\"range\" \r\n                    className=\"form-control-range\" \r\n                    min={0} \r\n                    max={intitialDailyData.length} \r\n                    onChange={e => handleChanged(e)} \r\n                    defaultValue={intitialDailyData.length}\r\n                    style ={{backgroundColor: \"red\"}}/>\r\n                </div>\r\n            </div>\r\n            <div  className={mode + \" card\"} style={{width : \"100%\"}}>\r\n                <Scatter data={data} height={400} options = {options}></Scatter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScatterGraph;","import i18n from \"i18next\";\r\nimport {initReactI18next} from \"react-i18next\";\r\nimport detector from \"i18next-browser-languagedetector\"\r\nimport translationEN from \"../locales/en/translation.json\"\r\nimport translationVN from \"../locales/vn/translation.json\"\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  vn : {\r\n    translation: translationVN\r\n  }\r\n};\r\ni18n\r\n  .use(detector)\r\n  .use(initReactI18next) \r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\", \r\n    keySeparator: false, \r\n    interpolation: {\r\n      escapeValue: false,\r\n    }\r\n  });\r\nexport default i18n;","const locales = {\r\n    'en' : {\r\n        name : 'English'\r\n    },\r\n    'vn' : {\r\n        name : 'Tiếng Việt'\r\n    }\r\n};\r\nexport default locales;","import React, { useState } from 'react'\r\nimport i18n from '../../utils/i18n'\r\nimport locales from '../../locales/locales'\r\nimport './Header.css'\r\nconst Header = () => {\r\n    const [ mode, setMode ] = useState(localStorage.getItem(\"mode\") || \"light-mode\");\r\n    localStorage.setItem('mode', mode);\r\n    document.querySelector('body').className = mode;  \r\n    const style = {\r\n        backgroundColor : mode === \"light-mode\"? \"#FFB347\" : \"#C51F5D\",\r\n        color : mode === \"light-mode\" ? \"#000\" : \"#FFF\"\r\n    }\r\n    const handleModeChanged = (e) => {\r\n        setMode(prevState => {\r\n            let mode = \"light-mode\";\r\n            if (prevState === \"light-mode\") mode = \"dark-mode\";\r\n            document.querySelector('body').className = mode;  \r\n            localStorage.setItem('mode', mode);     \r\n            return mode;\r\n        }) \r\n    }\r\n\r\n    const [language, setLanguage] = useState(localStorage.getItem(\"language\") || 'en');\r\n    i18n.changeLanguage(language);\r\n    const languages = ()=> {\r\n        return Object.keys(locales).map((key)=>{\r\n            return <option key={key} value={key}>{locales[key].name}</option>\r\n        })\r\n    }\r\n    const handleLanguageChanged = (e) => {\r\n        setLanguage(e.target.value);\r\n        localStorage.setItem(\"language\", e.target.value);\r\n        i18n.changeLanguage(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <header className=\"container d-flex flex-column flex-sm-row pt-2 align-items-center justify-content-sm-between\">\r\n            <div>\r\n                <p id=\"logo\" className=\"mr-auto\">COVID-19 BROADCAST</p>\r\n            </div>  \r\n            <div className=\"mb-3\">\r\n                <select onChange={(e)=>handleLanguageChanged(e)} value={language} className={\"form-control-sm m-0 \" + mode}>\r\n                    {languages()}       \r\n                </select>\r\n                <button className=\"btn ml-2 btn-sm rounded-circle\" style={style}  onClick={(e) => handleModeChanged(e)}>\r\n                    <i className={mode === \"light-mode\" ? \"fa fa-sun-o\":\"fa fa-moon-o\"}></i>\r\n                </button>\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport './Footer.css'\r\nimport { useTranslation } from 'react-i18next'\r\nconst Footer = props => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div className=\"mt-5 footer\">\r\n            <p className=\"mb-1 text-center font-weight-lighter\">{t(\"lastUpdated\")} <span>{new Date(props.updated).toLocaleString()}</span></p>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <p className=\"mb-1\">{t(\"providedBy\")} <a href=\"https://disease.sh/\" target=\"_blank\">NOVEL COVID API</a></p>\r\n                <p className=\"mx-2\">|</p>\r\n                <p className=\"m-0\">{t(\"powerBy\")} <a href=\"https://github.com/InterviewCandies/Covid19-Broadcast\" target=\"_blank\">Vo Quoc Thang</a></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst Layout = props => (\r\n    <div>\r\n        <Header></Header>\r\n        {props.children}\r\n        <Footer updated={props.updated}></Footer>\r\n    </div>\r\n)\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { GLOBAL_HISTORY_URL } from '../../api/api'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { numberWithCommas } from '../../utils/numberWithCommas'\r\nconst LineGraph = () => {\r\n    const mode = localStorage.getItem(\"mode\");\r\n    const [ globalHistory, setGlobalHistory ] = useState({});\r\n    const { t } = useTranslation();\r\n    const style = { \r\n        fontColor : mode === \"light-mode\" ? \"#000\" : \"#FFF\"\r\n    }\r\n    useEffect(() => {\r\n        async function fetchGlobalHistory () {\r\n            try {\r\n                const result = await fetch(GLOBAL_HISTORY_URL);\r\n                const history = await result.json();\r\n                setGlobalHistory({...history});\r\n            }\r\n            catch (error){\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchGlobalHistory();\r\n    },[])\r\n    const convertData = obj => {\r\n        let list = [];\r\n        Object.keys(obj).forEach(key => {\r\n            list.push({x: key, y: obj[key]});\r\n        })\r\n        return list;\r\n    }\r\n    let data = {};\r\n    if (Object.keys(globalHistory).length !== 0) {\r\n        data = {\r\n            labels: Object.keys(globalHistory[\"cases\"]),\r\n            datasets: [{\r\n                label: t(\"confirmed\"),\r\n                data : convertData(globalHistory[\"cases\"]),\r\n                backgroundColor : \"blue\"\r\n            }, \r\n            {\r\n                label: t(\"deaths\"),\r\n                data : convertData(globalHistory[\"deaths\"]),\r\n                backgroundColor : \"red\"\r\n            },\r\n            {\r\n                label: t(\"recovered\"),\r\n                data : convertData(globalHistory[\"recovered\"]),\r\n                backgroundColor : \"green\"\r\n            }\r\n        ]\r\n        }\r\n    }\r\n    const options = {\r\n        tooltips: {\r\n            callbacks: {\r\n               label: function(tooltipItem, data) {\r\n                   let label = data.datasets[tooltipItem.datasetIndex][\"label\"];\r\n                  return label + \": \" + numberWithCommas(tooltipItem.yLabel);\r\n               }\r\n            }\r\n        },\r\n        scales : {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: style.fontColor,\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: style.fontColor,\r\n                }\r\n            }]\r\n        },\r\n        responsive : true, \r\n        maintainAspectRatio: false,\r\n        elements : \r\n            { \r\n                line : \r\n                    {\r\n                        fill : false\r\n                    }\r\n            }, \r\n            legend : \r\n            { \r\n                labels : { \r\n                    usePointStyle : true,\r\n                    fontColor : style.fontColor\r\n                }\r\n            }\r\n    }\r\n    return (\r\n        <div style={{width :\"100%\", height: \"300px\"}}>\r\n            <h5>{t(\"globalTimeline\")}</h5>\r\n                <Line data={data} options={options}></Line>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph","import React from 'react'\r\nimport { Polar } from 'react-chartjs-2'\r\nimport { numberWithCommas } from '../../../utils/numberWithCommas';\r\n\r\nconst PieChart = (props) => {\r\n    const options = { \r\n        legend: {\r\n            labels : {\r\n                fontColor : props.options[\"fontColor\"]\r\n            }\r\n        },\r\n        scale: {\r\n            gridLines: {\r\n                color: props.options[\"gridColor\"]\r\n            },\r\n            angleLines: {\r\n                color:  props.options[\"gridColor\"]\r\n            }\r\n        },\r\n        responsive : true,\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n            callbacks: {\r\n               label: function(tooltipItem, data) {\r\n                  let label = data.labels[tooltipItem.index];\r\n                  return label + \": \" + numberWithCommas(tooltipItem.yLabel) + \" cases\";\r\n               }\r\n            }\r\n        },\r\n    }\r\n    const data = { \r\n        datasets: [{\r\n            data : props.data,\r\n            backgroundColor: props.colors,\r\n\r\n        }],\r\n        labels: props.labels\r\n    }\r\n    return(\r\n        <div style={{width:\"100%\"}}>\r\n            <Polar data={data}  options={options} height=\"300\"> </Polar>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default PieChart;","import React, { useState, useEffect } from 'react'\r\nimport PieChart from './PieChart/PieChart'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { CONTINENT_URL } from '../../api/api';\r\n\r\n\r\nconst ContinentsStats = () => {\r\n    const mode = localStorage.getItem('mode');\r\n    const { t } = useTranslation();\r\n    const options = {\r\n        gridColor : mode === \"light-mode\"? \"#000\" : \"#FFF\",\r\n        fontColor : mode  === \"light-mode\"? \"#000\" : \"#FFF\"\r\n    }\r\n    const [ continents, setContinents ] = useState([]);\r\n    useEffect(()=>{\r\n        async function fetchContinents() {\r\n            try {\r\n                const result = await fetch(CONTINENT_URL);\r\n                const continents = await result.json();\r\n                setContinents([...continents])\r\n            }\r\n            catch (error){\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchContinents();\r\n    },[])\r\n    const getData = key => {\r\n        return continents.map(continent => continent[key]);\r\n    }\r\n    const continentLabels = getData(\"continent\");\r\n    const colors = [\"#e76f51\", \"#f4a261\", \"#e9c46a\", \"#2a9d8f\", \"#CD5C5C\", \"#264653\"];\r\n    return(\r\n        <div>\r\n            <div style={{width : \"100%\"}}>\r\n                <h5>{t('casesByContinent')}</h5>\r\n                <PieChart labels={continentLabels} colors={colors} data={getData(\"cases\")} options={options}></PieChart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContinentsStats;\r\n\r\n","import React from 'react'\r\nimport LineGraph from '../../containers/LineGraph/LineGraph'\r\nimport ContinentsStats from '../../containers/ContinentsStats/ContinentsStats'\r\nconst Overview = () => (\r\n    <div className=\"mt-5 d-flex flex-column flex-lg-row justify-content-between\">\r\n        <div className=\"col-lg-6 mb-5 mb-lg-0\"><LineGraph></LineGraph></div>\r\n        <div className=\"col-lg-6\"><ContinentsStats></ContinentsStats></div>\r\n    </div>\r\n)\r\nexport default Overview;","import React, { Component } from 'react';\nimport './App.css';\nimport GlobalStats from   './containers/GlobalStats/GlobalStats';\nimport DataTable from './containers/DataTable/DataTable';\nimport BarGraph from './containers/BarGraph/BarGraph';\nimport Maps from './containers/Maps/Maps';\nimport ScatterGraph from './containers/ScatterGraph/ScatterGraph';\nimport Layout from './components/Layout/Layout';\nimport Overview from './components/Overview/Overview';\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      updated: 0\n    }\n  }\n  changeUpdate = date => this.setState({updated : date});\n\n  render() {\n    return (\n      <Layout updated={this.state.updated}>\n          <main className=\"container\">\n            <GlobalStats updated={this.changeUpdate}></GlobalStats>\n            <Overview></Overview>\n            <DataTable></DataTable>\n            <BarGraph></BarGraph>\n            <Maps></Maps>\n            <ScatterGraph></ScatterGraph>\n          </main>\n      </Layout>    \n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}